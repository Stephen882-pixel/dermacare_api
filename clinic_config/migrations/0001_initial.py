# Generated by Django 5.2.3 on 2025-06-16 08:37

import django.core.validators
import django.db.models.deletion
import phonenumber_field.modelfields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ClinicSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clinic_name', models.CharField(default='DermaCare Clinic', max_length=200)),
                ('tagline', models.CharField(blank=True, max_length=300)),
                ('description', models.TextField(blank=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='clinic/')),
                ('favicon', models.ImageField(blank=True, null=True, upload_to='clinic/')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('email', models.EmailField(max_length=254)),
                ('website', models.URLField(blank=True)),
                ('address_line_1', models.CharField(max_length=200)),
                ('address_line_2', models.CharField(blank=True, max_length=200)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(blank=True, max_length=100)),
                ('postal_code', models.CharField(blank=True, max_length=20)),
                ('country', models.CharField(default='Kenya', max_length=100)),
                ('facebook_url', models.URLField(blank=True)),
                ('twitter_url', models.URLField(blank=True)),
                ('instagram_url', models.URLField(blank=True)),
                ('linkedin_url', models.URLField(blank=True)),
                ('youtube_url', models.URLField(blank=True)),
                ('timezone', models.CharField(default='Africa/Nairobi', max_length=50)),
                ('appointment_buffer_minutes', models.PositiveIntegerField(default=15, help_text='Buffer time between appointments in minutes')),
                ('max_advance_booking_days', models.PositiveIntegerField(default=60, help_text='Maximum days in advance patients can book')),
                ('min_advance_booking_hours', models.PositiveIntegerField(default=24, help_text='Minimum hours in advance for booking')),
                ('cancellation_deadline_hours', models.PositiveIntegerField(default=24, help_text='Hours before appointment when cancellation is allowed')),
                ('send_appointment_confirmations', models.BooleanField(default=True)),
                ('send_appointment_reminders', models.BooleanField(default=True)),
                ('reminder_hours_before', models.PositiveIntegerField(default=24)),
                ('send_follow_up_reminders', models.BooleanField(default=True)),
                ('currency', models.CharField(default='KES', max_length=3)),
                ('tax_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('emergency_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('emergency_email', models.EmailField(blank=True, max_length=254)),
                ('maintenance_mode', models.BooleanField(default=False)),
                ('maintenance_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Clinic Settings',
                'verbose_name_plural': 'Clinic Settings',
                'db_table': 'clinic_config_settings',
            },
        ),
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('template_type', models.CharField(choices=[('appointment_confirmation', 'Appointment Confirmation'), ('appointment_reminder', 'Appointment Reminder'), ('appointment_cancellation', 'Appointment Cancellation'), ('appointment_rescheduled', 'Appointment Rescheduled'), ('welcome_new_patient', 'Welcome New Patient'), ('follow_up_reminder', 'Follow-up Reminder'), ('birthday_wishes', 'Birthday Wishes'), ('newsletter', 'Newsletter'), ('lab_results_ready', 'Lab Results Ready'), ('payment_receipt', 'Payment Receipt'), ('custom', 'Custom Template')], max_length=50, unique=True)),
                ('subject', models.CharField(max_length=200)),
                ('body_html', models.TextField(help_text='HTML email body')),
                ('body_text', models.TextField(help_text='Plain text email body')),
                ('is_active', models.BooleanField(default=True)),
                ('variables_help', models.TextField(blank=True, help_text='Available variables for this template (for admin reference)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'clinic_config_email_template',
                'ordering': ['template_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Holiday',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('date', models.DateField()),
                ('is_recurring', models.BooleanField(default=False, help_text='Recurring annually')),
                ('description', models.TextField(blank=True)),
                ('affects_appointments', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'clinic_config_holiday',
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='PaymentSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.CharField(choices=[('cash', 'Cash'), ('card', 'Credit/Debit Card'), ('mobile_money', 'Mobile Money'), ('bank_transfer', 'Bank Transfer'), ('insurance', 'Insurance')], max_length=20, unique=True)),
                ('is_enabled', models.BooleanField(default=True)),
                ('display_name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('processing_fee_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('processing_fee_fixed', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'clinic_config_payment_settings',
                'ordering': ['order', 'display_name'],
            },
        ),
        migrations.CreateModel(
            name='SMSTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('template_type', models.CharField(choices=[('appointment_confirmation', 'Appointment Confirmation'), ('appointment_reminder', 'Appointment Reminder'), ('appointment_cancellation', 'Appointment Cancellation'), ('lab_results_ready', 'Lab Results Ready'), ('payment_reminder', 'Payment Reminder'), ('custom', 'Custom Template')], max_length=50, unique=True)),
                ('message', models.TextField(help_text='SMS message (max 160 characters)', max_length=160)),
                ('is_active', models.BooleanField(default=True)),
                ('variables_help', models.TextField(blank=True, help_text='Available variables for this template (for admin reference)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'clinic_config_sms_template',
                'ordering': ['template_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SystemNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('notification_type', models.CharField(choices=[('info', 'Information'), ('warning', 'Warning'), ('error', 'Error'), ('success', 'Success'), ('maintenance', 'Maintenance')], default='info', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('show_to_patients', models.BooleanField(default=False)),
                ('show_to_staff', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'clinic_config_system_notification',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BusinessHours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.IntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')])),
                ('is_open', models.BooleanField(default=True)),
                ('opening_time', models.TimeField(blank=True, null=True)),
                ('closing_time', models.TimeField(blank=True, null=True)),
                ('lunch_break', models.BooleanField(default=False)),
                ('lunch_start', models.TimeField(blank=True, null=True)),
                ('lunch_end', models.TimeField(blank=True, null=True)),
                ('notes', models.CharField(blank=True, max_length=200)),
                ('clinic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='business_hours', to='clinic_config.clinicsettings')),
            ],
            options={
                'db_table': 'clinic_config_business_hours',
                'ordering': ['day_of_week'],
                'unique_together': {('clinic', 'day_of_week')},
            },
        ),
    ]
